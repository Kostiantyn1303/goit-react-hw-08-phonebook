{"version":3,"file":"static/js/299.ae35669f.chunk.js","mappings":"iSACaA,EAAOC,EAAAA,EAAAA,KAAH,uEAIJC,EAAYD,EAAAA,EAAAA,MAAH,4NAUTE,EAAUF,EAAAA,EAAAA,OAAH,4rBAgCPG,EAAYH,EAAAA,EAAAA,MAAH,6X,SC4DtB,EAlGoB,WAClB,IAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAkBC,EAAAA,EAAAA,MAClBC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAElBG,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MAEd,OAAQb,GACN,IAAK,OACHC,EAAQY,GACR,MACF,IAAK,QACHV,EAASU,GACT,MACF,IAAK,WACHR,EAAYQ,GAKjB,EAkBD,OACE,0BACE,UAACvB,EAAD,CAAMwB,SAlBW,SAAAH,GACnBA,EAAMI,iBAEN,IAAMC,EAAW,CACfhB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,GAEFT,GAASsB,EAAAA,EAAAA,IAASD,IAClBb,EAAS,IACTF,EAAQ,IACRI,EAAY,IAEZR,EAAS,aACTqB,IAAAA,OAAAA,QAAwB,gCACzB,EAGG,WACE,0BACE,UAAC1B,EAAD,CAAW2B,QAASb,EAApB,UAAqC,aAEnC,SAACZ,EAAD,CACE0B,KAAK,OACLP,MAAOb,EACPqB,SAAUX,EACVV,KAAK,OAGLsB,UAAQ,EACRC,GAAIjB,UAIV,0BACE,UAACd,EAAD,CAAW2B,QAASX,EAApB,UAAkC,SAEhC,SAACd,EAAD,CACE0B,KAAK,QACLP,MAAOX,EACPmB,SAAUX,EACVV,KAAK,QAGLsB,UAAQ,EACRC,GAAIf,UAIV,0BACE,UAAChB,EAAD,CAAW2B,QAASV,EAApB,UAAqC,YAEnC,SAACf,EAAD,CACE0B,KAAK,WACLP,MAAOT,EACPiB,SAAUX,EACVV,KAAK,WAGLsB,UAAQ,EACRC,GAAId,UAIV,SAAChB,EAAD,CAAS2B,KAAK,SAAd,SAAuB,mBAI9B,EChGD,EARqB,WACnB,OACE,8BACE,SAAC,EAAD,KAGL,C","sources":["components/RegistrationForm/RegisterForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","views/RegistrViews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const Form = styled.form`\n  margin-bottom: 60px;\n  text-align: center;\n`;\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  font-weight: 700;\n  display: block;\n  margin-bottom: 10px;\n  background-clip: text;\n  background-image: linear-gradient(45deg, #553c9a, #ee4b2b);\n  color: transparent;\n`;\n\nexport const FormBtn = styled.button`\n  cursor: pointer;\n\n  display: block;\n  margin: 0 auto;\n  margin-top: 6px;\n\n  width: 100%;\n  max-width: 180px;\n  height: 30px;\n  padding: 2px 5px;\n\n  color: black;\n  background-color: #e6e6fa;\n  font-size: 14px;\n  font-weight: 700;\n\n  border: none;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #010101;\n    background-color: #c8e9e3;\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px,\n      rgba(0, 0, 0, 0.24) 2px 2px 5px;\n  }\n`;\nexport const FormInput = styled.input`\n  width: 200px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px 20px;\n  margin-bottom: 20px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  transition: all 250ms linear;\n\n  &:focus {\n    box-shadow: rgba(100, 100, 111, 0.6) 0px 7px 29px 0px;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { register } from '../../redux/auth/authOperation';\n\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { Form, FormInput, FormLabel, FormBtn } from './RegisterForm.styled';\n\nconst RegistrForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const userNameInputId = nanoid();\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const userData = {\n      name,\n      email,\n      password,\n    };\n    dispatch(register(userData));\n    setEmail('');\n    setName('');\n    setPassword('');\n\n    navigate('/contacts');\n    Notiflix.Notify.success('Your registration was success');\n  };\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <div>\n          <FormLabel htmlFor={userNameInputId}>\n            User Name\n            <FormInput\n              type=\"text\"\n              value={name}\n              onChange={handleInputChange}\n              name=\"name\"\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              id={userNameInputId}\n            />\n          </FormLabel>\n        </div>\n        <div>\n          <FormLabel htmlFor={emailInputId}>\n            Email\n            <FormInput\n              type=\"email\"\n              value={email}\n              onChange={handleInputChange}\n              name=\"email\"\n              // pattern=\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\"\n              // title=\"Please enter a valid email address\"\n              required\n              id={emailInputId}\n            />\n          </FormLabel>\n        </div>\n        <div>\n          <FormLabel htmlFor={passwordInputId}>\n            Password\n            <FormInput\n              type=\"password\"\n              value={password}\n              onChange={handleInputChange}\n              name=\"password\"\n              // pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n              // title=\"Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one digit\"\n              required\n              id={passwordInputId}\n            />\n          </FormLabel>\n        </div>\n        <FormBtn type=\"submit\">Registrate</FormBtn>\n      </Form>\n    </div>\n  );\n};\nexport default RegistrForm;\n","import RegistrForm from 'components/RegistrationForm/RegistrationForm';\n\nconst RegistrViews = () => {\n  return (\n    <section>\n      <RegistrForm />\n    </section>\n  );\n};\n\nexport default RegistrViews;\n"],"names":["Form","styled","FormLabel","FormBtn","FormInput","dispatch","useDispatch","navigate","useNavigate","useState","name","setName","email","setEmail","password","setPassword","userNameInputId","nanoid","emailInputId","passwordInputId","handleInputChange","event","currentTarget","value","onSubmit","preventDefault","userData","register","Notiflix","htmlFor","type","onChange","required","id"],"sourceRoot":""}