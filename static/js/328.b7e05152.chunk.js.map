{"version":3,"file":"static/js/328.b7e05152.chunk.js","mappings":"oQACaA,EAAOC,EAAAA,EAAAA,KAAH,uEAIJC,EAAYD,EAAAA,EAAAA,MAAH,4NAUTE,EAAUF,EAAAA,EAAAA,OAAH,4rBAgCPG,EAAYH,EAAAA,EAAAA,MAAH,6X,0DC0BtB,EAhEkB,WAChB,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEbC,GAAeC,EAAAA,EAAAA,MACfC,GAAaD,EAAAA,EAAAA,MAEXE,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACD,UAATD,GAAkBX,EAASY,GAClB,aAATD,GAAqBT,EAAYU,EACtC,EAEKC,EAAY,mCAAG,WAAMJ,GAAN,uEACnBA,EAAMK,iBACN,IACQC,EAAW,CACfhB,MAAAA,EACAE,SAAAA,GAEFE,GAASa,EAAAA,EAAAA,IAAMD,IACfE,IAAAA,OAAAA,QAAwB,yBAGzB,CAFC,MAAOC,GACPC,QAAQD,MAAM,gBAAiBA,EAChC,CAXkB,2CAAH,sDAclB,OACE,0BACE,UAACzB,EAAD,CAAM2B,SAAUP,EAAhB,WACE,UAAClB,EAAD,CAAW0B,QAAShB,EAApB,UAAkC,SAEhC,SAACR,EAAD,CACEyB,KAAK,QACLV,MAAOb,EACPwB,SAAUf,EACVG,KAAK,QAGLa,UAAQ,EACRC,GAAIpB,QAIR,UAACV,EAAD,CAAW0B,QAASd,EAApB,UAAgC,YAE9B,SAACV,EAAD,CACEyB,KAAK,WACLV,MAAOX,EACPsB,SAAUf,EACVG,KAAK,WAGLa,UAAQ,EACRC,GAAIlB,QAIR,SAACX,EAAD,CAAS0B,KAAK,SAAd,SAAuB,eAI9B,EChED,EAPmB,WACjB,OACE,8BACE,SAAC,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","views/LoginViews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const Form = styled.form`\n  margin-bottom: 60px;\n  text-align: center;\n`;\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  font-weight: 700;\n  display: block;\n  margin-bottom: 10px;\n  background-clip: text;\n  background-image: linear-gradient(45deg, #553c9a, #ee4b2b);\n  color: transparent;\n`;\n\nexport const FormBtn = styled.button`\n  cursor: pointer;\n\n  display: block;\n  margin: 0 auto;\n  margin-top: 6px;\n\n  width: 100%;\n  max-width: 180px;\n  height: 30px;\n  padding: 2px 5px;\n\n  color: black;\n  background-color: #e6e6fa;\n  font-size: 14px;\n  font-weight: 700;\n\n  border: none;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #010101;\n    background-color: #c8e9e3;\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px,\n      rgba(0, 0, 0, 0.24) 2px 2px 5px;\n  }\n`;\nexport const FormInput = styled.input`\n  width: 200px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px 20px;\n  margin-bottom: 20px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  transition: all 250ms linear;\n\n  &:focus {\n    box-shadow: rgba(100, 100, 111, 0.6) 0px 7px 29px 0px;\n  }\n`;\n","import React from 'react';\nimport { Form, FormInput, FormBtn, FormLabel } from './LoginForm.styled';\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { logIn } from 'redux/auth/authOperation';\n\nimport Notiflix from 'notiflix';\nimport { useDispatch } from 'react-redux';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  let emailInputId = nanoid();\n  let passwordId = nanoid();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'email') setEmail(value);\n    if (name === 'password') setPassword(value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const userData = {\n        email,\n        password,\n      };\n      dispatch(logIn(userData));\n      Notiflix.Notify.success('Your login was success');\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <FormLabel htmlFor={emailInputId}>\n          Email\n          <FormInput\n            type=\"email\"\n            value={email}\n            onChange={handleInputChange}\n            name=\"email\"\n            //   pattern=\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\"\n            //   title=\"Please enter a valid email address\"\n            required\n            id={emailInputId}\n          />\n        </FormLabel>\n\n        <FormLabel htmlFor={passwordId}>\n          Password\n          <FormInput\n            type=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            name=\"password\"\n            //   pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n            //   title=\"Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one digit\"\n            required\n            id={passwordId}\n          />\n        </FormLabel>\n\n        <FormBtn type=\"submit\">Log in</FormBtn>\n      </Form>\n    </div>\n  );\n};\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nconst LoginViews = () => {\n  return (\n    <section>\n      <LoginForm />\n    </section>\n  );\n};\nexport default LoginViews;\n"],"names":["Form","styled","FormLabel","FormBtn","FormInput","useState","email","setEmail","password","setPassword","dispatch","useDispatch","emailInputId","nanoid","passwordId","handleInputChange","event","currentTarget","name","value","handleSubmit","preventDefault","userData","logIn","Notiflix","error","console","onSubmit","htmlFor","type","onChange","required","id"],"sourceRoot":""}